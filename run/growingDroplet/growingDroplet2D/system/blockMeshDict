/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2106                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Some parameters are defined in a separate file to enable simpler parameter
// variation.
#include "<constant>/caseParameters"

// Length given here are in millimeter
scale   0.001;

// Length (x-direction)and height (z-direction) of domain
L   5;
H   2.5;

// Resolution in each direction (nl x nh)
//  - coarse: 50x25
//  - medium: 100x50
//  - fine:   200x100 
nh  $resolutionHeight;
nl  #eval{2*$nh};

// W (y-direction) is used as empty direction for 2D
// Fixed depth for simpler computation of inflow rate for U
W   50.0e-3;   

vertices
(
    (0  0  0)
    ($L 0  0)
    ($L $W 0)
    (0  $W 0)
    (0  0  $H)
    ($L 0  $H)
    ($L $W $H)
    (0  $W $H)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) ($nl 1 $nh) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    // Front and back are empty directions
    front
    {
        type empty;
        faces
        (
            (1 5 4 0)
        );
    }
    back
    {
        type empty;
        faces
        (
            (3 7 6 2)
        );
    }
    left
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }
    right
    {
        type patch;
        faces
        (
            (2 6 5 1)
        );
    }
    top
    {
        type patch;
        faces
        (
            (4 5 6 7)
        );
    }
    bottom 
    {
        type patch;
        faces
        (
            (0 3 2 1)
        );
    }

);

mergePatchPairs
(
);


// ************************************************************************* //
