/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\	  /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version         2.0;
    format          ascii;
    class           dictionary;
    location        "system";
    object          controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
application     interFlow;

startFrom	latestTime;

startTime	0.0;

stopAt          endTime;

endTime         0.001;

writeControl    adjustableRunTime;

writeInterval   0.0001;

deltaT          1e-4;
//deltaT          0.0002;
purgeWrite	0;

writeFormat     ascii;

writePrecision  14;

writeCompression off;

timeFormat	general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable yes;

adjustTimeStep  no;

maxCo           0.1;

maxAlphaCo	0.1;

maxDeltaT	0.0001;

maxCapillaryNum 1; //mu*V/sigma
libs ("libdcaCoxVoinov.so"
       "navierSlipBc.so"
           "libtwoPhaseProperties.so"
    "libdynContactAngleModels.so"
);

functions
{
    surfaces
    {
        type            surfaces;
        libs
	(
            "libsampling.so"
        );
	writeControl   outputTime;
        //writeInterval  0.0005;

        surfaceFormat  vtk;
        formatOptions
        {
            vtk
            {
             	legacy true;
                format ascii;
            }
	}
	fields
	(
            p U alpha.water_glycerol
        );

        interpolationScheme cellPoint;

        surfaces
        (
            isoAlpha
            {
             	type        isoSurface;
                isoField    alpha.water_glycerol;
                isoValue    0.5;
                interpolate true;
            }
	);
    }
 plic
    {
        type            surfaces;
        libs            (geometricVoF postProcess);
        writeControl    writeTime;

        surfaceFormat   vtp;
        fields          (p U);

        interpolationScheme cell;

        surfaces
        {
            freeSurf
            {
                type            interface;
                interpolate     false;
            }
        }
    }
/*    wettedArea
    {
     	type wettedArea;
        libs ("libwettedAreaFunctionObject.so");
        phaseIndicator alpha.water_glycerol;
    }
*/
/*    contactAngle2DEvaluation
    {
     	type contactAngle2DEvaluation;
        libs ("libcontactAngle2DEvaluationFunctionObject.so");
        phaseIndicator alpha.water_glycerol;
        patchName wall1;
    }*/
  /*  contactAngle3D
    {
     	type contactAngle3D;
        libs ("libcontactAngle3DFunctionObject.so");
        phaseIndicator alpha.water_glycerol;
    }
*/
}
